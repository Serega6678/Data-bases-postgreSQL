CREATE SCHEMA LAPTOP_PRODUCING_COMPANY;

CREATE TABLE LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR(
  DISTRIBUTOR_NM VARCHAR(50) PRIMARY KEY,
  ADDRESS VARCHAR(50) UNIQUE,
  PHONE_NUM VARCHAR(50) NOT NULL UNIQUE CHECK (PHONE_NUM LIKE '+7%' OR PHONE_NUM LIKE '8%'),
  SHOP_CNT INT
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.CPU(
  CPU_MD VARCHAR(50) PRIMARY KEY,
  FREQUENCY INT NOT NULL,
  CORE_CNT SMALLINT NOT NULL
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.GPU(
  GPU_MD VARCHAR(50),
  GPU_MANUFACTURER VARCHAR(50),
  GPU_RAM INT NOT NULL,
  PRIMARY KEY(GPU_MD, GPU_MANUFACTURER)
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.VENDOR(
  VENDOR_NM VARCHAR(50) PRIMARY KEY,
  ADDRESS VARCHAR(50) UNIQUE,
  PHONE_NUM VARCHAR(50) NOT NULL UNIQUE CHECK(PHONE_NUM LIKE '+7%' OR PHONE_NUM LIKE '8%')
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.CPU_VENDOR(
  CPU_MD VARCHAR(50),
  VENDOR_NM VARCHAR(50),
  PRICE_PER_UNIT DECIMAL(15, 2) NOT NULL,
  PRIMARY KEY (CPU_MD, VENDOR_NM),
  FOREIGN KEY (CPU_MD) REFERENCES LAPTOP_PRODUCING_COMPANY.CPU(CPU_MD) ON DELETE NO ACTION ON UPDATE NO ACTION,
  FOREIGN KEY (VENDOR_NM) REFERENCES LAPTOP_PRODUCING_COMPANY.VENDOR(VENDOR_NM) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.GPU_VENDOR(
  GPU_MD VARCHAR(50),
  GPU_MANUFACTURER VARCHAR(50),
  VENDOR_NM VARCHAR(50),
  PRICE_PER_UNIT DECIMAL(15, 2) NOT NULL,
  PRIMARY KEY (GPU_MD, GPU_MANUFACTURER, VENDOR_NM),
  FOREIGN KEY (VENDOR_NM) REFERENCES LAPTOP_PRODUCING_COMPANY.VENDOR(VENDOR_NM) ON DELETE NO ACTION ON UPDATE NO ACTION,
  FOREIGN KEY (GPU_MD, GPU_MANUFACTURER) REFERENCES LAPTOP_PRODUCING_COMPANY.GPU(GPU_MD, GPU_MANUFACTURER) ON DELETE NO ACTION
                                                                                                           ON UPDATE NO ACTION
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.LAPTOP(
  LAPTOP_MD VARCHAR(50) PRIMARY KEY ,
  SCREEN_RES VARCHAR(15) NOT NULL,
  SCREEN_SZ DECIMAL(6, 2) NOT NULL,
  GPU_MD VARCHAR(50) NOT NULL,
  GPU_MANUFACTURER VARCHAR(50) NOT NULL,
  CPU_MD VARCHAR(50) NOT NULL,
  BATTERY_SZ INT,
  WEIGHT DECIMAL(8, 3),
  FOREIGN KEY (GPU_MD, GPU_MANUFACTURER) REFERENCES LAPTOP_PRODUCING_COMPANY.GPU(GPU_MD, GPU_MANUFACTURER) ON DELETE NO ACTION
                                                                                                           ON UPDATE NO ACTION ,
  FOREIGN KEY (CPU_MD) REFERENCES LAPTOP_PRODUCING_COMPANY.CPU(CPU_MD) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP(
  LAPTOP_MD VARCHAR(50),
  DISTRIBUTOR_NM VARCHAR(50),
  PRICE_PER_UNIT DECIMAL(15, 2) NOT NULL,
  LAPTOP_LAUNCH_DT DATE DEFAULT now()::date,
  LAPTOP_END_DT DATE NOT NULL DEFAULT '9999-12-31',
  PRIMARY KEY (LAPTOP_MD, DISTRIBUTOR_NM, LAPTOP_LAUNCH_DT),
  FOREIGN KEY (LAPTOP_MD) REFERENCES LAPTOP_PRODUCING_COMPANY.LAPTOP(LAPTOP_MD) ON DELETE NO ACTION ON UPDATE NO ACTION ,
  FOREIGN KEY (DISTRIBUTOR_NM) REFERENCES LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR(DISTRIBUTOR_NM) ON DELETE NO ACTION
                                                                                               ON UPDATE NO ACTION
);

INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('MVIDEO', NULL, '8(800)555-35-35', 565);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('NIX', 'г Москва, улица Пушкина дом 3', '+79631251654', 25);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('Citilink', 'г Москва, улица Планерная дом 75', '89314962504', 323);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('TMALL', NULL, '+79651251944', NULL);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('Notik', NULL, '8(856)8432834', NULL);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('ELDORADO', 'г Москва, улица Дмитровская дом 28', '89634568754', 375);

INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i5 8250U', 1600, 4);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Celeron', 1600, 2);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i7 8550U', 1800, 4);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i7 8565U', 1800, 4);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i3 6006U', 2000, 2);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i3 8130U', 2200, 2);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU VALUES ('Intel Core i5 7200U', 2500, 2);

INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('GeForce MX 150', 'NVIDIA', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('HD Graphics 400', 'Intel', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('Radeon R4', 'AMD', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('Radeon 530', 'AMD', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('GeForce MX110', 'NVIDIA', 4096);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('GeForce GTX 1050', 'NVIDIA', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('HD Graphics 520', 'Intel', 2048);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU VALUES ('HD Graphics 620', 'Intel', 4096);

INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('NVIDIA Russia', NULL, '8(800)558765');
INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('INTEL Germany', NULL, '+79648671654');
INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('AMD Russia', 'г Москва, улица Планерная дом 5', '+79311234564');
INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('INTEL Russia', 'г Москва, Дмитровское шоссе дом 94', '+79655783194');
INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('NVIDIA Ukraine', NULL, '+71234567890');
INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('Celeron Russia', NULL, '84561237853');

INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i5 8250U', 'INTEL Germany', 19000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Celeron', 'Celeron Russia', 8500.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i7 8550U', 'INTEL Russia', 25000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i7 8550U', 'INTEL Germany', 28000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i7 8565U', 'INTEL Germany', 27000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i3 6006U', 'INTEL Germany', 13000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i3 8130U', 'INTEL Russia', 17000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.CPU_VENDOR VALUES ('Intel Core i5 7200U', 'INTEL Russia', 23000.00);

INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('GeForce MX 150', 'NVIDIA', 'NVIDIA Ukraine', 15000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('HD Graphics 400', 'Intel', 'INTEL Germany', 7500.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('Radeon R4', 'AMD', 'AMD Russia', 10500.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('Radeon 530', 'AMD', 'AMD Russia', 11000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('GeForce MX110', 'NVIDIA', 'NVIDIA Ukraine', 12000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('GeForce GTX 1050', 'NVIDIA', 'NVIDIA Russia', 13000.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('HD Graphics 520', 'Intel', 'INTEL Russia', 8500.00);
INSERT INTO LAPTOP_PRODUCING_COMPANY.GPU_VENDOR VALUES ('HD Graphics 620', 'Intel', 'INTEL Germany', 10000.00);

INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Xiaomi Mi Notebook Air 2018', '1920x1080', 13.3, 'GeForce MX 150', 'NVIDIA', 'Intel Core i5 8250U', 3000, 1.325);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('ASUS E406SA', '1366x768', 14.0, 'HD Graphics 400', 'Intel', 'Celeron', 2300, 1.400);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Xiaomi Mi Notebook Pro', '1920x1080', 15.6, 'GeForce MX 150', 'NVIDIA', 'Intel Core i5 8250U', 3100, 1.950);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Lenovo Ideapad 330s 15', '1366x768', 15.6, 'Radeon R4', 'AMD', 'Intel Core i3 6006U', 2700, 1.870);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('DELL INSPIRON 5370', '1920x1080', 13.3, 'Radeon 530', 'AMD', 'Intel Core i5 8250U', 2530, 1.420);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Xiaomi Mi Notebook Lite', '1920x1080', 15.6, 'HD Graphics 620', 'Intel', 'Intel Core i7 8550U', 2330, 2.180);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('ASUS ZenBook UX533FD', '1920x1080', 15.6, 'GeForce GTX 1050', 'NVIDIA', 'Intel Core i7 8565U', 3330, 1.597);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Lenovo Ideapad 330 15', '1366x768', 15.6, 'HD Graphics 520', 'Intel', 'Intel Core i3 6006U', 2230, 2.257);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Lenovo V330', '1920x1080', 15.6, 'HD Graphics 620', 'Intel', 'Intel Core i3 8130U', 2478, 1.789);
INSERT INTO LAPTOP_PRODUCING_COMPANY.LAPTOP VALUES ('Lenovo V320', '1920x1080', 17.3, 'HD Graphics 620', 'Intel', 'Intel Core i5 7200U', 2791, 2.824);

INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Air 2018', 'MVIDEO', 58990.00, '2018-09-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Air 2018', 'ELDORADO', 58990.00, '2018-09-08');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Air 2018', 'Notik', 55990.00, '2018-09-05', '2018-10-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Air 2018', 'Notik', 54990.00, '2018-10-02');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS E406SA', 'NIX', 14590.00, '2017-11-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS E406SA', 'MVIDEO', 14990.00, '2017-10-05', '2017-12-31');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS E406SA', 'MVIDEO', 15990.00, '2018-01-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Pro', 'MVIDEO', 62990.00, '2019-01-08');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Pro', 'NIX', 60990.00, '2019-02-15');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Pro', 'Citilink', 62990.00, '2019-01-12');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo Ideapad 330s 15', 'TMALL', 29990.00, '2018-12-15');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo Ideapad 330s 15', 'ELDORADO', 28990.00, '2018-11-25');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('DELL INSPIRON 5370', 'ELDORADO', 32990.00, '2018-04-01', '2019-04-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('DELL INSPIRON 5370', 'ELDORADO', 32990.00, '2019-04-02');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Lite', 'MVIDEO', 48990.00, '2018-01-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Xiaomi Mi Notebook Lite', 'ELDORADO', 48990.00, '2018-01-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS ZenBook UX533FD', 'MVIDEO', 75990.00, '2017-12-31', '2018-12-30');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS ZenBook UX533FD', 'MVIDEO', 76990.00, '2018-12-31');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS ZenBook UX533FD', 'NIX', 72990.00, '2017-12-31');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo Ideapad 330 15', 'Citilink', 26990.00, '2019-01-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V330', 'NIX', 40990.00, '2018-09-03');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V330', 'MVIDEO', 42990.00, '2018-09-01');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V320', 'Notik', 35990.00, '2018-05-15');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V320', 'TMALL', 38990.00, '2018-05-24', '2018-09-30');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V320', 'TMALL', 37990.00, '2018-10-01', '2018-12-31');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('Lenovo V320', 'TMALL', 36990.00, '2019-01-01');


INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('asus.ru', NULL, 84954954954, 1);
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS ZenBook UX533FD', 'asus.ru', 75990.00, '2018-11-30');
INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES ('ASUS E406SA', 'asus.ru', 15990.00, '2017-11-01');


SELECT lp.*, GPU_RAM
  FROM LAPTOP_PRODUCING_COMPANY.LAPTOP lp
 INNER JOIN LAPTOP_PRODUCING_COMPANY.GPU gpu
    ON lp.GPU_MD = gpu.GPU_MD
   AND lp.GPU_MANUFACTURER = gpu.GPU_MANUFACTURER;


SELECT lp.*, FREQUENCY, CORE_CNT
  FROM LAPTOP_PRODUCING_COMPANY.LAPTOP lp
 INNER JOIN LAPTOP_PRODUCING_COMPANY.CPU cpu
    ON lp.CPU_MD = cpu.CPU_MD;


INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES ('INTEL Ukraine', NULL, '+79123451654');


UPDATE LAPTOP_PRODUCING_COMPANY.CPU_VENDOR
   SET VENDOR_NM = 'INTEL Ukraine'
 WHERE VENDOR_NM = 'INTEL Germany';


INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR VALUES ('mvideo.ru', NULL, '+7(800)555-35-35', 565);


UPDATE LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP
   SET DISTRIBUTOR_NM = 'mvideo.ru'
 WHERE DISTRIBUTOR_NM = 'MVIDEO';


DELETE FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR
 WHERE DISTRIBUTOR_NM = 'MVIDEO';


--ноутбуки, продающиеся только в одном магазине
SELECT LAPTOP_MD
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP
 GROUP BY LAPTOP_MD
HAVING COUNT(DISTINCT DISTRIBUTOR_NM) = 1;


--информация о всех поступлениях ноутбуков и измении их цен у mvideo.ru
SELECT LAPTOP_MD, LAPTOP_LAUNCH_DT, LAPTOP_END_DT, PRICE_PER_UNIT
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP
 WHERE DISTRIBUTOR_NM = 'mvideo.ru'
 ORDER BY LAPTOP_LAUNCH_DT;


--минимальная цена на каждую модель из ноутбуков среди всех магазинов за все время
SELECT DISTINCT LAPTOP_MD, MIN(PRICE_PER_UNIT) OVER (PARTITION BY LAPTOP_MD) MIN_PRICE
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP;


--дата начала продаж данной модели ноутбука среди всех магазинов
SELECT DISTINCT LAPTOP_MD, MIN(LAPTOP_LAUNCH_DT) OVER (PARTITION BY LAPTOP_MD) LAUNCH_DT
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP;


--модели ноутбуков в порядке убывания размера экрана
SELECT DISTINCT ROW_NUMBER() OVER(ORDER BY SCREEN_SZ DESC) NUM, LAPTOP_MD, screen_sz
  FROM LAPTOP_PRODUCING_COMPANY.LAPTOP
 ORDER BY NUM;


--даты, в которые хотя бы в одном магазине ноутбук или поступал в продажу или на него изменялась цена
SELECT DISTINCT DENSE_RANK() OVER(PARTITION BY LAPTOP_MD ORDER BY LAPTOP_LAUNCH_DT) NUM, LAPTOP_MD, LAPTOP_LAUNCH_DT
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP
 ORDER BY LAPTOP_MD, NUM;


--начало и окончнаие продаж каждой модели ноутбука, начало - самое раннее поступление ноутбука в какой-либо магазин
SELECT DISTINCT FIRST_VALUE(LAPTOP_LAUNCH_DT) OVER(PARTITION BY LAPTOP_MD ORDER BY LAPTOP_LAUNCH_DT
       ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) LAUNCH_DT,
       LAST_VALUE(LAPTOP_END_DT) OVER(PARTITION BY LAPTOP_MD ORDER BY LAPTOP_END_DT
       ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) END_DT,
       LAPTOP_MD
  FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP;


--информация о поставщиках, замазан телефон, скрыт адрес
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.ENCRYPTED_VENDOR AS (
  SELECT VENDOR_NM, OVERLAY(PHONE_NUM PLACING '*...*' from 1 for 8) as SHADOWED_PHONE_NUM
    FROM LAPTOP_PRODUCING_COMPANY.VENDOR
);


--информация о продавцах, замазан телефон, скрыт адрес
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.ENCRYPTED_DISTRIBUTOR AS (
  SELECT DISTRIBUTOR_NM, SHOP_CNT, OVERLAY(PHONE_NUM PLACING '*...*' from 1 for 8) as SHADOWED_PHONE_NUM
    FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR
);


--последняя цена на данный ноутбук в данной сети магазинов
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.LAPTOP_LAST_PRICES AS (
  SELECT DISTINCT LAPTOP_MD, DISTRIBUTOR_NM,
         (SELECT P.PRICE_PER_UNIT
            FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP P
           WHERE LAPTOP_END_DT =
                 (SELECT max(DP.laptop_end_dt)
                    FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP DP
                   WHERE DL.LAPTOP_MD = DP.LAPTOP_MD AND DL.DISTRIBUTOR_NM = DP.DISTRIBUTOR_NM
                   ) AND P.LAPTOP_MD = DL.LAPTOP_MD AND P.DISTRIBUTOR_NM = DL.DISTRIBUTOR_NM)
    FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP DL
);


--модели ноутбуков, в которых установлен процессор стоимостью не менее 15 тысяч рублей
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.LAPTOPS_WITH_EXPENSIVE_CPU AS (
  SELECT lp.LAPTOP_MD
    FROM LAPTOP_PRODUCING_COMPANY.LAPTOP lp
   WHERE lp.CPU_MD IN (SELECT DISTINCT CPU_MD
                             FROM LAPTOP_PRODUCING_COMPANY.CPU_VENDOR
                            WHERE PRICE_PER_UNIT >= 15000)
);


--максимально полная сводка характеристик для нотубука
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.FULL_LAPTOP AS (
  SELECT lp.*, c.FREQUENCY, c.CORE_CNT, g.GPU_RAM
    FROM LAPTOP_PRODUCING_COMPANY.LAPTOP lp
   INNER JOIN LAPTOP_PRODUCING_COMPANY.CPU c
      ON c.CPU_MD = lp.CPU_MD
   INNER JOIN LAPTOP_PRODUCING_COMPANY.GPU g
      ON g.GPU_MANUFACTURER = lp.GPU_MANUFACTURER AND g.GPU_MD = lp.GPU_MD
);


--средняя цена(последняя цена при наличии нескольких) ноутбука по размеру экрана в нашей выборке в mvideo.ru
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.AVG_PRICE_FOR_SCREEN_SIZE AS (
  SELECT lp.SCREEN_SZ, AVG(llp.PRICE_PER_UNIT)
    FROM LAPTOP_PRODUCING_COMPANY.LAPTOP_LAST_PRICES llp
   INNER JOIN LAPTOP_PRODUCING_COMPANY.LAPTOP lp
      ON llp.LAPTOP_MD = lp.LAPTOP_MD
   WHERE llp.DISTRIBUTOR_NM = 'mvideo.ru'
   GROUP BY lp.SCREEN_SZ
);


--список поставщиков, поставляющих комплектующие для данной модели ноутбука
CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.LAPTOP_VENDORS AS (
  SELECT lp.LAPTOP_MD, g.VENDOR_NM AS GPU_VENDOR, c.VENDOR_NM AS CPU_VENDOR
    FROM LAPTOP_PRODUCING_COMPANY.LAPTOP lp
   INNER JOIN LAPTOP_PRODUCING_COMPANY.GPU_VENDOR g
      ON g.GPU_MD = lp.GPU_MD AND g.GPU_MANUFACTURER = lp.GPU_MANUFACTURER
   INNER JOIN LAPTOP_PRODUCING_COMPANY.CPU_VENDOR c
      ON c.CPU_MD = lp.CPU_MD
);


drop view LAPTOP_PRODUCING_COMPANY.ENCRYPTED_VENDOR;
drop view LAPTOP_PRODUCING_COMPANY.ENCRYPTED_DISTRIBUTOR;
drop view LAPTOP_PRODUCING_COMPANY.LAPTOP_LAST_PRICES;


select * from LAPTOP_PRODUCING_COMPANY.ENCRYPTED_VENDOR;
select * from LAPTOP_PRODUCING_COMPANY.ENCRYPTED_DISTRIBUTOR;
select * from LAPTOP_PRODUCING_COMPANY.LAPTOP_LAST_PRICES;
select * from LAPTOP_PRODUCING_COMPANY.LAPTOPS_WITH_EXPENSIVE_CPU;
select * from LAPTOP_PRODUCING_COMPANY.FULL_LAPTOP;
select * from LAPTOP_PRODUCING_COMPANY.AVG_PRICE_FOR_SCREEN_SIZE;
select * from LAPTOP_PRODUCING_COMPANY.LAPTOP_VENDORS;

select * from LAPTOP_PRODUCING_COMPANY.CPU_VENDOR;
select * from LAPTOP_PRODUCING_COMPANY.GPU_VENDOR;
select * from LAPTOP_PRODUCING_COMPANY.VENDOR;


--меняет имя поставщика видеокарты и процессора по текущему имени поставщика, все изменения согласованы с условиями на таблички.
--метка u приписывается к адресу и телефону, чтобы сделать их уникальными из-за ограничений таблицы, далее эта метка чистится и все налаживается :)
CREATE OR REPLACE PROCEDURE LAPTOP_PRODUCING_COMPANY.UPDATE_VENDOR_NAME(CURRENT_NAME VARCHAR(50), NEW_NAME VARCHAR(50)) AS $$
DECLARE
  COMPANY_PHONE VARCHAR(50) := (SELECT PHONE_NUM FROM LAPTOP_PRODUCING_COMPANY.VENDOR WHERE VENDOR_NM = CURRENT_NAME);
  COMPANY_ADDRESS VARCHAR(50);
BEGIN
  COMPANY_ADDRESS := (COALESCE((SELECT ADDRESS FROM LAPTOP_PRODUCING_COMPANY.VENDOR WHERE VENDOR_NM = CURRENT_NAME), 'NULL'));
  EXECUTE 'INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR VALUES (''' || NEW_NAME || ''', ''' || COMPANY_ADDRESS ||
          'u'', ''' || COMPANY_PHONE || 'u'');';
  EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.CPU_VENDOR SET VENDOR_NM = ''' || NEW_NAME || ''' WHERE VENDOR_NM = ''' || CURRENT_NAME || ''';' ;
  EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.GPU_VENDOR SET VENDOR_NM = ''' || NEW_NAME || ''' WHERE VENDOR_NM = ''' || CURRENT_NAME || ''';' ;
  EXECUTE 'DELETE FROM LAPTOP_PRODUCING_COMPANY.VENDOR WHERE VENDOR_NM = ''' || CURRENT_NAME || ''';';
  EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.VENDOR SET PHONE_NUM = ''' || COMPANY_PHONE || ''' WHERE VENDOR_NM = ''' || NEW_NAME || ''';' ;
  EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.VENDOR SET ADDRESS = ''' || COMPANY_ADDRESS || ''' WHERE VENDOR_NM = ''' || NEW_NAME || ''';' ;
  IF COMPANY_ADDRESS = 'NULL' THEN
    EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.VENDOR SET ADDRESS = ' || 'NULL' ||  ' WHERE VENDOR_NM = ''' || NEW_NAME || ''';' ;
  END IF;
END;
$$ LANGUAGE plpgsql;


--добавляет новую цену на данный ноутбук у данного продавца, на самой последней цене в графе "окончание продаж по такой цене" ставит сегодняшнюю дату.
CREATE OR REPLACE PROCEDURE LAPTOP_PRODUCING_COMPANY.UPDATE_DISTRIBUTOR_PRICE(DISTRIBUTOR_NAME VARCHAR(50), LAPTOP_MODEL VARCHAR(50), NEW_PRICE DECIMAL(15, 2)) AS $$
DECLARE
  MAX_PREV_DATE DATE := (SELECT MAX(LAPTOP_END_DT) FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP WHERE LAPTOP_MD = LAPTOP_MODEL);
BEGIN
  IF MAX_PREV_DATE = '9999-12-31' THEN
    EXECUTE 'UPDATE LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP SET LAPTOP_END_DT = ''' || now()::date - interval '1 day' || ''' WHERE LAPTOP_MD = ''' || LAPTOP_MODEL || ''' AND LAPTOP_END_DT = ''' || MAX_PREV_DATE || ''';';
  END IF;
  EXECUTE 'INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP VALUES (''' || LAPTOP_MODEL || ''', ''' || DISTRIBUTOR_NAME || ''',' || NEW_PRICE || ', ''' || now()::date  || ''');';
END;
$$ LANGUAGE plpgsql;


select * from LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP;
select * from LAPTOP_PRODUCING_COMPANY.VENDOR;


call LAPTOP_PRODUCING_COMPANY.UPDATE_VENDOR_NAME('INTEL flex', 'INTEL chill');
call LAPTOP_PRODUCING_COMPANY.UPDATE_DISTRIBUTOR_PRICE('NIX', 'ASUS E406SA', 160000.00);


CREATE INDEX LAPTOP_CPU_IDX ON LAPTOP_PRODUCING_COMPANY.LAPTOP (CPU_MD);
CREATE INDEX LAPTOP_GPU_IDX ON LAPTOP_PRODUCING_COMPANY.LAPTOP (GPU_MD, GPU_MANUFACTURER);


drop table LAPTOP_PRODUCING_COMPANY.VENDOR_LOGGER;
drop table LAPTOP_PRODUCING_COMPANY.vendor_logger;


-- логирует изменение данных в табличке и дату изменения
CREATE TABLE LAPTOP_PRODUCING_COMPANY.VENDOR_LOGGER(
  VENDOR_NM VARCHAR(50),
  ADDRESS VARCHAR(50),
  PHONE_NUM VARCHAR(50) NOT NULL CHECK(PHONE_NUM LIKE '+7%' OR PHONE_NUM LIKE '8%'),
  CHANGE_DT TIMESTAMP DEFAULT NOW(),
  CHANGED_USER VARCHAR(50),
  PRIMARY KEY (VENDOR_NM, PHONE_NUM, CHANGE_DT)
);


CREATE OR REPLACE FUNCTION LOG_CHANGE_VENDOR() RETURNS TRIGGER AS $$
  BEGIN
  INSERT INTO LAPTOP_PRODUCING_COMPANY.VENDOR_LOGGER VALUES(OLD.VENDOR_NM, OLD.ADDRESS, OLD.PHONE_NUM, now(), current_user);
  RETURN NEW;
  END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER VENDOR_LOGGER
  BEFORE UPDATE ON LAPTOP_PRODUCING_COMPANY.VENDOR
  FOR EACH ROW
  EXECUTE PROCEDURE LOG_CHANGE_VENDOR();


select * from LAPTOP_PRODUCING_COMPANY.VENDOR_LOGGER;


drop table LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_CHANGE_NAME;


CREATE TABLE LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_CHANGE_NAME
(
  OLD_DISTRIBUTOR_NM VARCHAR(50),
  NEW_DISTRIBUTOR_NM VARCHAR(50),
  CHANGE_DT          TIMESTAMP DEFAULT NOW(),
  CHANGED_USER       VARCHAR(50),
  PRIMARY KEY (OLD_DISTRIBUTOR_NM, NEW_DISTRIBUTOR_NM, CHANGE_DT)
);


CREATE OR REPLACE FUNCTION LOG_CHANGE_VENDOR() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_CHANGE_NAME VALUES(OLD.DISTRIBUTOR_NM, NEW.DISTRIBUTOR_NM, now(), current_user);
    RETURN NEW;
  END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER DISTRIBUTOR_NAME_CHANGE_LOGGER
  BEFORE UPDATE ON LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR
  FOR EACH ROW
  WHEN (OLD.DISTRIBUTOR_NM IS DISTINCT FROM NEW.DISTRIBUTOR_NM)
  EXECUTE PROCEDURE LOG_CHANGE_VENDOR();


select * from LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_CHANGE_NAME;
select * from LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR;


insert into LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR values ('FLEX', null, '+789786978', null);


update LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR set DISTRIBUTOR_NM = 'FLEX' where DISTRIBUTOR_NM = 'CHILL';


CREATE OR REPLACE VIEW LAPTOP_PRODUCING_COMPANY.EASY_UPDATE_DISTRIBUTOR_LAPTOP AS SELECT * FROM LAPTOP_PRODUCING_COMPANY.DISTRIBUTOR_LAPTOP;


-- записывает данные в специальную табличку перед их удалением из основной
CREATE TABLE LAPTOP_PRODUCING_COMPANY.DELETED_CPU_VENDOR (
  CPU_MD VARCHAR(50),
  VENDOR_NM VARCHAR(50),
  PRICE_PER_UNIT DECIMAL(15, 2) NOT NULL,
  DELETE_DT TIMESTAMP DEFAULT NOW(),
  CHANGED_USR VARCHAR(50),
  PRIMARY KEY(CPU_MD, VENDOR_NM, DELETE_DT)
);


CREATE OR REPLACE FUNCTION LAPTOP_PRODUCING_COMPANY.LOG_DELETING_CPU_VENDOR_INFO() RETURNS TRIGGER AS $$
  BEGIN
    INSERT INTO LAPTOP_PRODUCING_COMPANY.DELETED_CPU_VENDOR VALUES(OLD.CPU_MD, OLD.VENDOR_NM, OLD.PRICE_PER_UNIT, now(), user);
    RETURN OLD;
  END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER DELETE_FROM_CPU_VENDOR
  BEFORE DELETE ON LAPTOP_PRODUCING_COMPANY.CPU_VENDOR
  FOR EACH ROW
  EXECUTE PROCEDURE LAPTOP_PRODUCING_COMPANY.LOG_DELETING_CPU_VENDOR_INFO();


drop trigger DELETE_FROM_CPU_VENDOR on LAPTOP_PRODUCING_COMPANY.CPU_VENDOR;
